{"version":3,"sources":["components/WinModal/WinModal.module.css","components/UI/CardArea.module.css","components/UI/Container.module.css","components/UI/Container.js","components/MainHeader/MainHeader.js","components/UI/Card.js","assets/01_lion-king.jpg","assets/02_up.jpg","assets/03_jaws.jpg","assets/04_star-wars.jpg","assets/05_anchorman.jpg","assets/06_et.jpg","assets/07_amelie.jpg","assets/08_american-beauty.jpg","assets/09_terminator.jpg","assets/10_parasite.jpg","assets/11_back-to-the-future.jpg","assets/12_kill-bill.jpg","components/UI/CardArea.js","components/WinModal/WinModal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","props","className","classes","container","children","MainHeader","score","highScore","filenameRefs","1","2","3","4","5","6","7","8","9","10","11","12","Card","imgRef","number","card","src","alt","onClick","CardArea","useState","currentState","setCurrentState","extents","map","i","onShuffle","arrCopy","newArr","shuffle","cards","length","randomIndex","Math","floor","random","item","splice","push","onClickHandler","WinModal","background","border","modal","title","restart","onRestart","App","currentStreak","setCurrentStreak","currentScore","setCurrentScore","setHighScore","gameStatus","setGameStatus","useEffect","document","includes","scoreHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7521abdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"WinModal_background__22N5e\",\"border\":\"WinModal_border__2T0Hn\",\"modal\":\"WinModal_modal__jR0Uy\",\"restart\":\"WinModal_restart__1cg0X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"extents\":\"CardArea_extents__1tc56\",\"card\":\"CardArea_card__1KMil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Ff1R\"};","import React from \"react\";\nimport classes from \"./Container.module.css\";\n\nconst Container = (props) => {\n  return <div className={classes.container}>{props.children}</div>;\n};\nexport default Container;\n","import React from \"react\";\n\nconst MainHeader = (props) => {\n  return (\n    <div>\n      <h1>MOVIE MEMORY CARD GAME</h1>\n      <h2>\n        Score points by clicking on a movie title. If you click on the same\n        title twice, the score resets!\n      </h2>\n      <h2 className='score-tally'>SCORE: {props.score}</h2>\n      <h2 className='score-tally'>HIGH-SCORE: {props.highScore}</h2>\n    </div>\n  );\n};\nexport default MainHeader;\n","import classes from \"./CardArea.module.css\";\nimport img01 from \"../../assets/01_lion-king.jpg\";\nimport img02 from \"../../assets/02_up.jpg\";\nimport img03 from \"../../assets/03_jaws.jpg\";\nimport img04 from \"../../assets/04_star-wars.jpg\";\nimport img05 from \"../../assets/05_anchorman.jpg\";\nimport img06 from \"../../assets/06_et.jpg\";\nimport img07 from \"../../assets/07_amelie.jpg\";\nimport img08 from \"../../assets/08_american-beauty.jpg\";\nimport img09 from \"../../assets/09_terminator.jpg\";\nimport img10 from \"../../assets/10_parasite.jpg\";\nimport img11 from \"../../assets/11_back-to-the-future.jpg\";\nimport img12 from \"../../assets/12_kill-bill.jpg\";\n\nconst filenameRefs = {\n  1: img01,\n  2: img02,\n  3: img03,\n  4: img04,\n  5: img05,\n  6: img06,\n  7: img07,\n  8: img08,\n  9: img09,\n  10: img10,\n  11: img11,\n  12: img12,\n};\n\nconst Card = (props) => {\n  const imgRef = filenameRefs[props.number];\n\n  return (\n    <img\n      className={classes.card}\n      src={imgRef}\n      alt={\"movie title\"}\n      onClick={props.onClick}\n    ></img>\n  );\n};\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/01_lion-king.b2f4fa16.jpg\";","export default __webpack_public_path__ + \"static/media/02_up.ebf74b26.jpg\";","export default __webpack_public_path__ + \"static/media/03_jaws.2a4ba572.jpg\";","export default __webpack_public_path__ + \"static/media/04_star-wars.26bd6203.jpg\";","export default __webpack_public_path__ + \"static/media/05_anchorman.a7a42645.jpg\";","export default __webpack_public_path__ + \"static/media/06_et.362f8ada.jpg\";","export default __webpack_public_path__ + \"static/media/07_amelie.a9248c29.jpg\";","export default __webpack_public_path__ + \"static/media/08_american-beauty.d4b361f1.jpg\";","export default __webpack_public_path__ + \"static/media/09_terminator.038c501d.jpg\";","export default __webpack_public_path__ + \"static/media/10_parasite.2cdfe20f.jpg\";","export default __webpack_public_path__ + \"static/media/11_back-to-the-future.9d19f350.jpg\";","export default __webpack_public_path__ + \"static/media/12_kill-bill.073ecfaf.jpg\";","import React, { useState } from \"react\";\nimport classes from \"./CardArea.module.css\";\nimport Card from \"./Card\";\n\nconst CardArea = (props) => {\n  const [currentState, setCurrentState] = useState([\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"11\",\n    \"12\",\n  ]);\n\n  const onClickHandler = (number) => {\n    props.onShuffle(number);\n    const arrCopy = [...currentState];\n    const newArr = [];\n\n    const shuffle = (cards) => {\n      if (cards.length === 0) return;\n      let randomIndex = Math.floor(Math.random() * cards.length);\n      let item = cards.splice(randomIndex, 1);\n      newArr.push(item[0]);\n      shuffle(cards);\n    };\n    shuffle(arrCopy);\n\n    setCurrentState(newArr);\n  };\n\n  return (\n    <div className={classes.extents}>\n      {currentState.map((number, i) => (\n        <Card\n          key={number}\n          number={currentState[i]}\n          onClick={() => onClickHandler(number)}\n        />\n      ))}\n    </div>\n  );\n};\nexport default CardArea;\n","import classes from \"./WinModal.module.css\";\nconst WinModal = (props) => {\n  return (\n    <div className={classes.background}>\n      <div className={classes.border}>\n        <div className={classes.modal}>\n          <h1 className={classes.title}>You Win!</h1>\n          <button className={classes.restart} onClick={props.onRestart}>\n            RESTART GAME\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default WinModal;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Container from \"./components/UI/Container\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport CardArea from \"./components/UI/CardArea\";\nimport WinModal from \"./components/WinModal/WinModal\";\n\nfunction App() {\n  const [currentStreak, setCurrentStreak] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [gameStatus, setGameStatus] = useState(0);\n\n  useEffect(() => {\n    document.title = \"Movie Memory Card Game\";\n  }, []);\n\n  const scoreHandler = (number) => {\n    if (currentStreak.includes(number)) {\n      setCurrentStreak([]);\n      setCurrentScore(0);\n    } else {\n      setCurrentStreak([...currentStreak, number]);\n      setCurrentScore(currentScore + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (currentScore > highScore) setHighScore(currentScore);\n  }, [currentScore, highScore]);\n\n  useEffect(() => {\n    if (highScore === 12) {\n      setGameStatus(1);\n    }\n  }, [highScore]);\n\n  const resetGame = () => {\n    setGameStatus(0);\n    setCurrentStreak([]);\n    setCurrentScore(0);\n    setHighScore(0);\n  };\n\n  return (\n    <div>\n      {gameStatus ? <WinModal onRestart={resetGame} /> : null}\n      <Container>\n        <MainHeader score={currentScore} highScore={highScore} />\n        <CardArea onShuffle={(number) => scoreHandler(number)} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}